---

- name: Install https for apt
  apt:
    update_cache: yes
    name: apt-transport-https

- name: Install tunneldigger dependencies
  apt:
    pkg: ['bridge-utils', 'ebtables', 'git', 'iproute2', 'libevent-dev',
          'libnetfilter-conntrack3', 'python3-dev', 'python3-virtualenv',
          'libffi-dev', 'libnfnetlink-dev', 'libnetfilter-conntrack-dev', 'gcc']
    state: present

- name: Make sure the tunneldigger directory exists
  file:
     path: /srv/tunneldigger
     state: directory

- name: Make sure the blacklist.cfg exists
  file:
     name: /srv/tunneldigger/blacklist.cfg
     state: touch

- name: Make sure the conf directory exists
  file:
     path: /srv/tunneldigger/conf
     state: directory

- name: Make sure the scripts directory exists
  file:
     path: /srv/tunneldigger/scripts
     state: directory

- name: Deploy addif.sh
  template: src=addif.sh.j2 dest="/srv/tunneldigger/scripts/addif.sh" mode=0755

- name: Deploy delif.sh
  template: src=delif.sh.j2 dest="/srv/tunneldigger/scripts/delif.sh" mode=0755

- name: Clone tunneldigger
  git: repo=https://github.com/wlanslovenija/tunneldigger dest=/srv/tunneldigger/tunneldigger force=yes update=yes version=25854b7af14d54f0164f06d18289278ff0082a2a

- name: Setup virtualenv for tunneldigger
  command: virtualenv /srv/tunneldigger/tunneldigger_env -p python3.7 creates="/srv/tunneldigger/tunneldigger_env"

- name: Install python dependencies
  shell: "/srv/tunneldigger/tunneldigger_env/bin/python /srv/tunneldigger/tunneldigger/broker/setup.py install"
  args:
     chdir: /srv/tunneldigger/tunneldigger/broker/

- name: Deploy tunneldigger_kmods.conf to /etc/modules-load.d/
  notify: load kernel modules
  copy:
    dest: /etc/modules-load.d/tunneldigger_kmods.conf
    content: |
      nf_conntrack_netlink
      nfnetlink
      nf_conntrack
      l2tp_netlink
      l2tp_core
      l2tp_eth

- name: Install service file tunneldigger.service
  template: src=tunneldigger.service.j2 dest=/etc/systemd/system/tunneldigger.service
  register: servicefile

- name: Systemd daemon-reload
  systemd:
    daemon_reload: yes
  when: servicefile.changed
