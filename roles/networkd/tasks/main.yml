---

- name: Add backports repositories
  register: backportsrepositoryadded
  when: ansible_distribution == 'Debian' and ansible_distribution_release == 'jessie'
  apt_repository:
    repo: "deb http://ftp.debian.org/debian jessie-backports main"

- name: Update apt chache to get jessie-backports packages
  apt: update_cache=yes
  when: backportsrepositoryadded is changed

- name: Install systemd from backports repo
  register: systemdinstall
  when: ansible_distribution == 'Debian' and ansible_distribution_release == 'jessie'
  apt:
    name: systemd
    default_release: jessie-backports
    state: latest

- name: Reboot after upgrading systemd
  command: /usr/bin/systemd-run --on-active=2 /bin/systemctl reboot
  async: 1
  poll: 0
  when: systemdinstall is changed
  changed_when: true

- name: Waiting for server to come back after upgrading systemd
  local_action: command sleep 60
  when: systemdinstall is changed

- name: Enable systemd-networkd
  service: name=systemd-networkd enabled=yes state=started
  # networkd does not remove any existing network configuration,
  # so this should be safe.

- name: Enable systemd-resolved
  service: name=systemd-resolved enabled=yes state=started

- name: Install iface configs
  notify: Restart networkd
  template:
    src: 1x-iface.network.j2
    dest: /etc/systemd/network/10-{{ item.1.iface }}.network
  with_indexed_items: "{{ networkd_configures }}"

- name: Install gre devices
  notify: Restart networkd
  template: src=2x-gre.netdev.j2 dest=/etc/systemd/network/2{{ item.0 }}-gre-{{ item.1.name }}.netdev
  with_indexed_items: "{{ networkd_gre_tunnels }}"

- name: Install tap devices
  notify: Restart networkd
  template: src=2x-tap.netdev.j2 dest=/etc/systemd/network/2{{ item.0 }}-tap-{{ item.1 }}.netdev
  with_indexed_items: "{{ networkd_tap_devices }}"

- name: Enable dns resolving with systemd-resolved
  register: enableresolved
  file: src=/run/systemd/resolve/resolv.conf dest=/etc/resolv.conf state=link force=yes

- name: Directly restart networkd
  service: name=systemd-networkd state=restarted
  when: enableresolved is changed

- name: Disable debian networking
  service: name=networking enabled=no
  # Do not stop the debian networking scripts immediately, since the scripts
  # would remove their already applied configuration. networkd does not perceive
  # the removed configuration and would not apply it's own. This would cause connection
  # loss. So we wait until the next reboot, to let networkd do the whole networking.

