# ------------------------------------------------------------------------------
#                                     filter
# ------------------------------------------------------------------------------

*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

#########
# INPUT #
#########

#
# DEFAULT FOO
#

  -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
  -A INPUT -i lo -j ACCEPT


#
# ACCEPT ICMP
#

  -A INPUT -p icmpv6 -j ACCEPT

#
# ACCEPT SSH
#

{% for port in firewall_ssh_ports %}
  -A INPUT -m tcp -p tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{# legacy variable #}
{% if firewall_ssh_port is defined %}
  -A INPUT -m tcp -p tcp --dport {{ firewall_ssh_port }} -j ACCEPT
{% endif %}

#
# OPEN TCP PORTS
#

{% for tcp_port in firewall_open_ports_tcp %}
  -A INPUT -m tcp -p tcp --dport {{ tcp_port }} -j ACCEPT
{% endfor %}


#
# OPEN TCP PORTS BY IFACE
#

{% for rule in firewall_open_ports_tcp_by_iface %}
  -A INPUT -m tcp -p tcp --dport {{ rule.port }} -i {{ rule.iface }} -j ACCEPT
{% endfor %}

#
# OPEN TCP PORTS BY IP
#

{% for rule in firewall_open_ports_tcp_by_ip %}
{% if rule.ip6 is defined %}
  -A INPUT -m tcp -p tcp --dport {{ rule.port }} -s {{ rule.ip6 }} -j ACCEPT
{% endif %}
{% endfor %}


#
# OPEN UDP PORTS
#

{% for udp_port in firewall_open_ports_udp %}
  -A INPUT -m udp -p udp --dport {{ udp_port }} -j ACCEPT
{% endfor %}


#
# OPEN UDP PORTS BY IFACE
#

{% for rule in firewall_open_ports_udp_by_iface %}
  -A INPUT -m udp -p udp --dport {{ rule.port }} -i {{ rule.iface }} -j ACCEPT
{% endfor %}


#
# OPEN UDP PORTS BY IP
#

{% for rule in firewall_open_ports_udp_by_ip %}
{% if rule.ip6 is defined %}
  -A INPUT -m udp -p udp --dport {{ rule.port }} -s {{ rule.ip6 }} -j ACCEPT
{% endif %}
{% endfor %}


{% if networkd_gre_tunnels is defined %}
#
# AUTOMATICALLY ACCEPT GRE FROM CONFIGURED REMOTE IPs
#

{% for tunnel in networkd_gre_tunnels %}
{% if ":" in tunnel.remote_outer_ip %}
  -A INPUT -p gre -s {{ tunnel.remote_outer_ip }} -j ACCEPT
{% endif %}
{% endfor %}


{% endif %}

#
# HARDCODED RULES
#

# allow (link local) babeld routing
  -A INPUT -m udp -p udp --dport 6696 -s fe80::/64 -j ACCEPT


#
# REJECT THE REST
#

  -A INPUT -p tcp -j REJECT --reject-with tcp-reset
  -A INPUT -p udp -j REJECT --reject-with icmp6-port-unreachable
  -A INPUT -j REJECT



###########
# FORWARD #
###########

{% if firewall_allowed_forwards is string and firewall_allowed_forwards == 'all' %}
  -A FORWARD -j ACCEPT
{% else %}
{% for allowed_forward in firewall_allowed_forwards %}
#
# ALLOW FORWARDING BETWEEN {{ allowed_forward.between }} AND {{ allowed_forward.and }}
#

  -A FORWARD -i {{ allowed_forward.between }} -o {{ allowed_forward.and }} -j ACCEPT
  -A FORWARD -i {{ allowed_forward.and }} -o {{ allowed_forward.between }} -j ACCEPT


{% endfor %}
{% endif %}

COMMIT


# ------------------------------------------------------------------------------
#                                     mangle
# ------------------------------------------------------------------------------

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]

###############
# PREROUTING #
###############

{% for table in firewall_alternative_routingtables %}
{% set table_id = 42 + loop.index0 %}
#
# RULES FOR TABLE {{ table.name }}
#

{% for src_iface in table.when_packet_from %}
  -A PREROUTING -i {{ src_iface }} -j MARK --set-xmark 0x{{ "%x" | format(table_id) }}/0xffffffff
{% endfor %}


{% endfor%}
COMMIT
