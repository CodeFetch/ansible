
@def $DEV_EXIT = eth0;
@def $DEV_IP = {{exit_ip}};

@def &PRIV_NET($net) = {
      outerface $DEV_EXIT daddr $net REJECT reject-with icmp-host-unreachable;
      outerface $DEV_EXIT saddr $net REJECT reject-with icmp-host-unreachable;
}

@def &PRIV_NET_DEST_ONLY($net) = {
      outerface $DEV_EXIT daddr $net REJECT reject-with icmp-host-unreachable;
}


domain (ip ip6) {
  table nat {
    chain POSTROUTING {
# WE PREFER SNAT HERE TO SET IP EXPLICITLY (needed on sn01)
#      saddr 10.0.0.0/8 outerface $DEV_EXIT MASQUERADE;
      saddr 10.0.0.0/8 outerface $DEV_EXIT SNAT to $DEV_IP;
    }
  }

  table filter {
    chain FORWARD {

      # We block for daddr only here, as the addresses will be natted
      # in outgoing case anyway. Filtering them here in a useful sense
      # is impossible therefore.

      &PRIV_NET_DEST_ONLY(10.0.0.0/8);
      &PRIV_NET_DEST_ONLY(100.64.0.0/10);
      &PRIV_NET_DEST_ONLY(127.0.0.0/8);
      &PRIV_NET_DEST_ONLY(169.254.0.0/16);
      &PRIV_NET_DEST_ONLY(172.16.0.0/12);
      &PRIV_NET_DEST_ONLY(192.0.2.0/24);
      &PRIV_NET_DEST_ONLY(192.88.99.0/24);
      &PRIV_NET_DEST_ONLY(192.168.0.0/16);
      &PRIV_NET_DEST_ONLY(198.18.0.0/15);
      &PRIV_NET_DEST_ONLY(198.51.100.0/24);
      &PRIV_NET_DEST_ONLY(203.0.113.0/24);
      &PRIV_NET_DEST_ONLY(224.0.0.0/4);
      &PRIV_NET_DEST_ONLY(240.0.0.0/4);

      # Blocked Ports:
      proto tcp dport 25 REJECT reject-with icmp-admin-prohibited;
      proto tcp sport 25 REJECT reject-with icmp-admin-prohibited;

      outerface $DEV_EXIT proto tcp tcp-flags (SYN RST) SYN TCPMSS clamp-mss-to-pmtu;

      outerface $DEV_EXIT interface $DEV_EXIT DROP;
      outerface $DEV_EXIT ACCEPT;
    }
  }
}
